{{- if .Values.infrastructure.dashboard.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-csrf
  namespace: timothyw-system
  labels:
    k8s-app: kubernetes-dashboard
type: Opaque
data:
  csrf: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-key-holder
  namespace: timothyw-system
  labels:
    k8s-app: kubernetes-dashboard
type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: timothyw-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: timothyw-system
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: timothyw-system
spec:
  ports:
    - port: 8443
      targetPort: 8443
  selector:
    k8s-app: kubernetes-dashboard
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-dashboard
  namespace: timothyw-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: kubernetes-dashboard
          image: kubernetesui/dashboard:v2.7.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace=timothyw-system
            - --token-ttl=0
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: kubernetes-dashboard-certs
              mountPath: /certs
      volumes:
        - name: kubernetes-dashboard-certs
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: admin-user
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: kubernetes-dashboard-ingress
  namespace: timothyw-system
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`{{ .Values.global.dashboardDomain }}`)
    kind: Rule
    services:
    - name: kubernetes-dashboard
      port: 8443
      scheme: https
  tls:
    certResolver: letsencrypt-prod
{{- end }}